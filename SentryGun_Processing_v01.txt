/*
This is the Processing side of the code for versions 1 and 2. It is pretty pathetic so far -
I am new to programming, and this code has a lot of illogical approaches and unneccessary
stuff. Please forgive any mistakes. In addition, it is fairly uncommented, but i will comment newer versions.

Thanks to the JMyron library and examples.

*/

//import ddf.minim.*;
import processing.serial.*;
import JMyron.*;


Serial arduinoPort;

JMyron m;

int q = 0;
int g = 0;
int x = 184;
int y = 160;
int le = 0;
int v = 0;
int targetx = 184;
int targety = 160;
int message = 0;
int fire = 0;
int aimingTolerance = 40;
String strTargetx;
String strTargety;
String strFire;
int tt;
//Minim minim;
//AudioSnippet song;



void setup(){
//  minim = new Minim(this);
//  song = minim.loadSnippet("machinegun.wav");

//  song.loop(1);

  int w = 320;
  int h = 240;
  // change the 2 in the next line to whichever port works for your arduino.
  arduinoPort = new Serial(this, Serial.list()[2], 19200);

  size(w,h);
  m = new JMyron();
  m.start(320,240);
  m.findGlobs(1);
}

void mousePressed(){
  m.settings();
}

void draw(){
  
  //tracks bright orange:
  m.trackColor(255,115,0,170);
  m.update();
  int[] img = m.image();

  // put camera image on the screen
  loadPixels();
  for(int i=0;i<width*height;i++){
    pixels[i] = img[i];
  }


  updatePixels();


  noFill();
  int[][] a;

  q = 0;
  g = 0;
  x = 160;
  y = 120;
  int le = 0;

  // center points of blobs
  a = m.globCenters();
  stroke(255,0,0);
  for(int i=0;i<a.length;i++){
    int[] p = a[i];
    q = q + p[0];
    g = g + p[1];
    le++;


  }

  int aw =0;
  int ah = 0;
  int aww = 0;
  int ahh = 0;
  int awc = 0;
  int ahc = 0;
  int targetsize = 0;
  int send = 0;
  int sendx = 1;
  int sendy = 1;

  //draw boxes of globs
  a = m.globBoxes();
  stroke(0,0,250);
  for(int i=0;i<a.length;i++){
    int[] b = a[i];
    rect(b[0], b[1], b[2], b[3]);


    if(b[2] > aw) {
      aw = b[0] + (b[2]/2);
      ah = b[1] + (b[3]/2);
      awc = i;
    }
  }


  if(aw == 0 && ah == 0) {
    aw = 184;
    ah = 160;
  }

  ellipse(aw, ah, 20, 20);
  ellipse(aw, ah, 24, 24);
  ellipse(aw, ah, 28, 28);
  targetx = aw;
  targety = ah;

  tt = 1;


  if(targetx == 0 && targety == 0) {
    targetx = 184;
    targety = 160;
  }

  if(targetx == 184 & targety == 160) {
    tt = 0;
  }

  if(abs(targetx - 184) <= aimingTolerance && abs(targety - 160) <= aimingTolerance && tt == 1) {
    fire = 1;
  }
  else{
    fire = 0;
  }

//  if (fire == 1) {
//    song.play();
//    song.loop();
//  }
//  else{
//    song.pause();
//  }

  strTargetx = "000" + str(targetx);
  strTargetx = strTargetx.substring(strTargetx.length()-3);
  strTargety = "000" + str(targety);
  strTargety = strTargety.substring(strTargety.length()-3);

  println(strTargetx + "X      " + strTargety + "Y      " + str(fire) + 'F');
  arduinoPort.write(strTargetx + 'X' + strTargety + 'Y' + str(fire) + 'F');

}


void stop(){
  m.stop();
//  song.close();
//  minim.stop();

  super.stop();
}




